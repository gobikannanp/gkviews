[{"authors":["gobikannan"],"categories":null,"content":"I'm Gobikannan Ponmalai, working in ADP as a Lead Application Developer.\n","date":1578970519,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1578970519,"objectID":"d0060f22e0bf751879caf47d2e6853d9","permalink":"/authors/gobikannan/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/gobikannan/","section":"authors","summary":"I'm Gobikannan Ponmalai, working in ADP as a Lead Application Developer.","tags":null,"title":"Gobikannan P","type":"authors"},{"authors":["Gobikannan P"],"categories":["PowerShell"],"content":"Scenario:\nI have list of machine IP, but I need name of the machines.\nSolution:\nTo get he machine name I can use nslookup command, which returns the machine name using the DNS server.\nSo to get the list of machine names from the IP list I can use the below powershell script.\n$machines = @{\r\u0026#34;machine1\u0026#34; = \u0026#34;10.20.100.12\u0026#34;\r\u0026#34;machine2\u0026#34; = \u0026#34;30.40.102.56\u0026#34;\r}\rforeach($item in $machines.Values){\r$s = \u0026amp;nslookup $item\rWrite-Host $s\r}\rRead-Host\rIncluded Read-Host to wait util get key input from user\n","date":1578970519,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578970519,"objectID":"af0269a202137bbd917e9f65235b3579","permalink":"/post/how-to-get-machine-name-form-its-ip-address-using-powershell/","publishdate":"2020-01-14T08:25:19+05:30","relpermalink":"/post/how-to-get-machine-name-form-its-ip-address-using-powershell/","section":"post","summary":"To get the name of machine names from a list, we can use powershell using nslookup command","tags":["PowerShell"],"title":"How to Get Machine Name Form Its Ip Address Using Powershell","type":"post"},{"authors":["Gobikannan P"],"categories":["PowerShell"],"content":"In windows you may get the file name length issue as like below in processing files like copy, move, delete, etc.\n The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.\n In this scenario, you may want to find the files with file path length is greater than or equal to 260 char or particular length.\nYou can use below Powershell script to find files by length of filename.\n\u0026lt;#Get-ChildItem -Path \u0026#34;C:\\Folder\\Path\\To\\Check\\The\\File\\Length\\\u0026#34; -Recurse -File |Where-Object {$_.FullName.Length -ge 260 } | %{$_.FullName}\r% is alias of ForEach-Object #\u0026gt;\rGet-ChildItem -Path \u0026#34;C:\\Folder\\Path\\To\\Check\\The\\File\\Length\\\u0026#34; -Recurse -File |Where-Object {$_.FullName.Length -ge 260 } | ForEach-Object{$_.FullName}\rYou can update the file length in above script which you want to find\nIf you want the result to a text file, you can pass the result to a text file using a pipe symbol.\nGet-ChildItem -Path \u0026#34;C:\\Folder\\Path\\To\\Check\\The\\File\\Length\\\u0026#34; -Recurse -File |Where-Object {$_.FullName.Length -ge 260 } | ForEach-Object{$_.FullName} | C:\\Temp\\Result.txt\r","date":1578620764,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578620764,"objectID":"caf91be6de288e5f138319f0351b0221","permalink":"/post/find-files-by-length-of-filename-using-powershell/","publishdate":"2020-01-10T07:16:04+05:30","relpermalink":"/post/find-files-by-length-of-filename-using-powershell/","section":"post","summary":"To get the list of files with file path length is greater than or equal to 260 characters which are causing issue like  'Filename Is Too Long' in Windows","tags":["PowerShell"],"title":"Find Files by Length of Filename Using Powershell","type":"post"},{"authors":["Gobikannan P"],"categories":["Git"],"content":"To create two different branches with differnt commits from same commit, we can use the below content as batch file.\ngit tag temp_tag\r:: To check the list of local branch\r git branch\rgit checkout myfirstbranch\recho off\recho \u0026#34;This is a Sample File for testing\u0026#34; \u0026gt; \u0026#34;mytestfile1.txt\u0026#34;\recho on\rgit add \u0026#34;mytestfile1.txt\u0026#34;\rgit commit -m \u0026#34;added a file in new branch\u0026#34;\r:: Change to root tag\r git checkout tags/temp_tag\rgit checkout mysecondbranch\recho off\recho \u0026#34;This is another file for testing\u0026#34; \u0026gt; \u0026#34;mytestfile2.txt\u0026#34;\recho on\rgit add \u0026#34;mytestfile2.txt\u0026#34;\rgit commit -m \u0026#34;added another file in another branch\u0026#34;\r:: remove the local temp branch\r git tag -d temp_tag\r:: push the branches to origin\r git push origin myfirstbranch:myfirstbranch\rgit push origin mysecondbranch:mysecondbranch\r:: checkout to diff branch if you want\r git checkout develop\rTo keep the base location (initial commit), a temporay tag is created in local to checkout later. This tag will be deleted from local to avoid further issue.\nYou can also use the Head~1 in checkout instead of tag.\n","date":1576424294,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576424294,"objectID":"1ab90f55e18ccc8d5de146ef1ce15d35","permalink":"/post/create-two-branches-from-same-commit/","publishdate":"2019-12-15T21:08:14+05:30","relpermalink":"/post/create-two-branches-from-same-commit/","section":"post","summary":"To create two different branches with differnt commits from same commit id using below batch file content","tags":["Batch","Git"],"title":"Create Two Branches From Same Commit","type":"post"},{"authors":["Gobikannan P"],"categories":["PowerShell"],"content":"To get the dotnet version using C#, we can use the below code\nusing System;\rusing Microsoft.Win32;\rpublic class GetDotNetVersion\r{\rpublic static void Main()\r{\rGet45PlusFromRegistry();\r}\rprivate static void Get45PlusFromRegistry()\r{\rconst string subkey = @\u0026#34;SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full\\\u0026#34;;\rusing (var ndpKey = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry32).OpenSubKey(subkey))\r{\rif (ndpKey != null \u0026amp;\u0026amp; ndpKey.GetValue(\u0026#34;Release\u0026#34;) != null) {\rConsole.WriteLine($\u0026#34;.NET Framework Version: {CheckFor45PlusVersion((int) ndpKey.GetValue(\u0026#34;Release\u0026#34;))}\u0026#34;);\r}\relse {\rConsole.WriteLine(\u0026#34;.NET Framework Version 4.5 or later is not detected.\u0026#34;);\r} }\r// Checking the version using \u0026gt;= enables forward compatibility.\r string CheckFor45PlusVersion(int releaseKey)\r{\rif (releaseKey \u0026gt;= 528040)\rreturn \u0026#34;4.8 or later\u0026#34;;\rif (releaseKey \u0026gt;= 461808)\rreturn \u0026#34;4.7.2\u0026#34;;\rif (releaseKey \u0026gt;= 461308)\rreturn \u0026#34;4.7.1\u0026#34;;\rif (releaseKey \u0026gt;= 460798)\rreturn \u0026#34;4.7\u0026#34;;\rif (releaseKey \u0026gt;= 394802)\rreturn \u0026#34;4.6.2\u0026#34;;\rif (releaseKey \u0026gt;= 394254)\rreturn \u0026#34;4.6.1\u0026#34;; if (releaseKey \u0026gt;= 393295)\rreturn \u0026#34;4.6\u0026#34;; if (releaseKey \u0026gt;= 379893)\rreturn \u0026#34;4.5.2\u0026#34;; if (releaseKey \u0026gt;= 378675)\rreturn \u0026#34;4.5.1\u0026#34;; if (releaseKey \u0026gt;= 378389)\rreturn \u0026#34;4.5\u0026#34;; // This code should never execute. A non-null release key should mean\r // that 4.5 or later is installed.\r return \u0026#34;No 4.5 or later version detected\u0026#34;;\r}\r}\r} // This example displays output like the following:\r// .NET Framework Version: 4.6.1\rTo get the dotnet version using powershell, we can use the below script\n$subkey = @\u0026#34;SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full\\\u0026#34;\rGet-ChildItem \u0026#39;HKLM:\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\u0026#39; -recurse |\rGet-ItemProperty -name Version,Release -EA 0 |\rWhere { $_.PSChildName -match \u0026#39;^(?![SW])\\p{L}\u0026#39;} |\rSelect PSChildName, Version, Release, @{\rname=\u0026#34;Product\u0026#34;\rexpression={\rswitch -regex ($_.Release) {\r\u0026#34;378389\u0026#34; { [Version]\u0026#34;4.5\u0026#34; }\r\u0026#34;378675|378758\u0026#34; { [Version]\u0026#34;4.5.1\u0026#34; }\r\u0026#34;379893\u0026#34; { [Version]\u0026#34;4.5.2\u0026#34; }\r\u0026#34;393295|393297\u0026#34; { [Version]\u0026#34;4.6\u0026#34; }\r\u0026#34;394254|394271\u0026#34; { [Version]\u0026#34;4.6.1\u0026#34; }\r\u0026#34;394802|394806\u0026#34; { [Version]\u0026#34;4.6.2\u0026#34; }\r\u0026#34;460798|460805\u0026#34; { [Version]\u0026#34;4.7\u0026#34; }\r\u0026#34;461308|461310\u0026#34; { [Version]\u0026#34;4.7.1\u0026#34; }\r\u0026#34;461808|461814\u0026#34; { [Version]\u0026#34;4.7.2\u0026#34; }\r\u0026#34;528040|528049\u0026#34; { [Version]\u0026#34;4.8\u0026#34; }\r{$_ -gt 528049} { [Version]\u0026#34;New Version (\u0026gt; 4.8), please include version in the script\u0026#34; }\r}\r}\r}\rRef: How to: Determine which .NET Framework versions are installed \n","date":1567964793,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567964793,"objectID":"dbcbd7bf465457c3a147bdd36af6a5bd","permalink":"/post/how-to-get-dotnet-version-using-powershell/","publishdate":"2019-09-08T23:16:33+05:30","relpermalink":"/post/how-to-get-dotnet-version-using-powershell/","section":"post","summary":"To get the dotnet version using C# and PowerShell","tags":["PowerShell"],"title":"How to Get Dotnet Version Using Powershell","type":"post"},{"authors":["Gobikannan P"],"categories":["PowerShell","Microsoft SQL"],"content":"In my previous post I have explained, how we can connect to SQL Server database and execute stored procedure from the powershell. If you missed it here is the link : Execute Storedprocedure in Powershell\nLets take the same example where we used for Create Insert Script From MS Sql Table\nThe create script for the table in the example is\nSET ANSI_NULLS ON\rGO\rSET QUOTED_IDENTIFIER ON\rGO\rCREATE TABLE [dbo].[MyTable1](\r[Id] [int] NOT NULL,\r[Name] [nvarchar](255) NOT NULL,\r[Age] [int] NULL,\r[Address] [nvarchar](255) NULL,\r[City] [nvarchar](50) NULL,\rCONSTRAINT [PK_MyTable1] PRIMARY KEY CLUSTERED (\r[Id] ASC\r)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r)\rGO\rWe are going to convert the table row data to insert script using a stored procedure. Each data will be converted to string based on its datatype.\nFor that I'm going to use a function named \u0026ldquo;FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT\u0026rdquo; which returns a string which converts the data to string based on the column datatype.\nSET ANSI_NULLS ON\rGO\rSET QUOTED_IDENTIFIER ON\rGO\r-- =============================================\r-- Author: Gobikannan P\r-- Create date: 01 May 2019\r-- Description: To Get the column string for insert script generation\r-- =============================================\rCREATE FUNCTION [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\r@ColumnName sysname, @DataType varchar(128), @IncludeTimestamp bit = 0\r)\rRETURNS NVARCHAR(MAX)\rAS\rBEGIN\rDECLARE @RetVal NVARCHAR(MAX)\rSELECT @RetVal = CASE WHEN @DataType IN (\u0026#39;char\u0026#39;,\u0026#39;varchar\u0026#39;,\u0026#39;nchar\u0026#39;,\u0026#39;nvarchar\u0026#39;,\u0026#39;sysname\u0026#39;) THEN \u0026#39;COALESCE(\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;+ REPLACE(RTRIM(\u0026#39; + @ColumnName + \u0026#39;),\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;)+\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39;\rWHEN @DataType IN (\u0026#39;datetime\u0026#39;,\u0026#39;smalldatetime\u0026#39;) THEN \u0026#39;COALESCE(\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;+ RTRIM(CONVERT(char,\u0026#39; + @ColumnName + \u0026#39;,109))+\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39;\rWHEN @DataType IN (\u0026#39;uniqueidentifier\u0026#39;) THEN \u0026#39;COALESCE(\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;+ REPLACE(CONVERT(char(255),RTRIM(\u0026#39; + @ColumnName + \u0026#39;)),\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;)+\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39;\rWHEN @DataType IN (\u0026#39;text\u0026#39;,\u0026#39;ntext\u0026#39;) THEN \u0026#39;COALESCE(\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;+ REPLACE(CONVERT(char(8000),\u0026#39; + @ColumnName + \u0026#39;),\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;)+\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39;\tWHEN @DataType IN (\u0026#39;binary\u0026#39;,\u0026#39;varbinary\u0026#39;) THEN \u0026#39;COALESCE(RTRIM(CONVERT(char,\u0026#39; + \u0026#39;CONVERT(int,\u0026#39; + @ColumnName + \u0026#39;))),\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39; WHEN @DataType IN (\u0026#39;timestamp\u0026#39;,\u0026#39;rowversion\u0026#39;) THEN CASE WHEN @IncludeTimestamp = 0 THEN \u0026#39;\u0026#39;\u0026#39;DEFAULT\u0026#39;\u0026#39;\u0026#39; ELSE \u0026#39;COALESCE(RTRIM(CONVERT(char,\u0026#39; + \u0026#39;CONVERT(int,\u0026#39; + @ColumnName + \u0026#39;))),\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39; END\rWHEN @DataType IN (\u0026#39;float\u0026#39;,\u0026#39;real\u0026#39;,\u0026#39;money\u0026#39;,\u0026#39;smallmoney\u0026#39;)\rTHEN \u0026#39;COALESCE(LTRIM(RTRIM(\u0026#39; + \u0026#39;CONVERT(char, \u0026#39; + @ColumnName + \u0026#39;,2)\u0026#39; + \u0026#39;)),\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39; ELSE \u0026#39;COALESCE(LTRIM(RTRIM(\u0026#39; + \u0026#39;CONVERT(char, \u0026#39; + @ColumnName + \u0026#39;)\u0026#39; + \u0026#39;)),\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;)\u0026#39; END + \u0026#39;+\u0026#39; + \u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;\u0026#39; + \u0026#39;+ \u0026#39;\rRETURN @RetVal\rEND\rGO\rBelow stored procedure uses the above function to construct insert statement from column. If you have any additional columns which you want to insert as NULL then need to use a constant value instead of calling the above function.\nIn the blow stored procedure script \u0026lsquo;MaritalStatus\u0026rsquo; column is added with NULL value.\nSET ANSI_NULLS ON\rGO\rSET QUOTED_IDENTIFIER ON\rGO\r-- =============================================\r-- Author:\tGobikannan Ponmalai\r-- Create date: 01 May 2019\r-- Description:\tTo create insert script from database table\r-- =============================================\rCREATE PROCEDURE [dbo].[SP_INSERTSCRIPT_FROM_DATATABLE]\r@AgeLimit int\rAS\rBEGIN\tDECLARE @InsertStatement varchar(max),@INCLUDENULLCOLUMN varchar(100) = \u0026#39;\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;\u0026#39;+ \u0026#39;+\u0026#39; + \u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;\u0026#39; + \u0026#39;+ \u0026#39;, @ColScriptConstructed NVARCHAR(max) = \u0026#39;\u0026#39;\rDECLARE @ResultInsertQuery AS TABLE(InsertQuery NVARCHAR(MAX) NOT NULL)\rIF NOT EXISTS (SELECT * FROM MyTable1)\rBEGIN\rSELECT \u0026#39;-- Info : There is no row found in the Table to convert insert script\u0026#39; AS [InsertResult]\rRETURN\rEND\rSET @InsertStatement = \u0026#39;INSERT INTO [dbo].[MyTable2]([Id],[Name],[Age],[MaritalStatus],[Address],[City]) VALUES \u0026#39;\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Id\u0026#39;, \u0026#39;int\u0026#39;, 0) -- [Id]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Name\u0026#39;, \u0026#39;nvarchar\u0026#39;, 0) -- [Name]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Age\u0026#39;, \u0026#39;int\u0026#39;, 0) -- [Age]\t\tSET @ColScriptConstructed += @INCLUDENULLCOLUMN -- [MaritalStatus]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Address\u0026#39;, \u0026#39;nvarchar\u0026#39;, 0) -- [Address]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;City\u0026#39;, \u0026#39;varchar\u0026#39;, 0) -- [City]\r\tSET @ColScriptConstructed = LEFT(@ColScriptConstructed,len(@ColScriptConstructed) - 6)\r-- SELECT @ColScriptConstructed\r\rSET @ColScriptConstructed = \u0026#39;SELECT \u0026#39; + \u0026#39;\u0026#39;\u0026#39;(\u0026#39;\u0026#39;+ \u0026#39; + @ColScriptConstructed + \u0026#39;+\u0026#39;\u0026#39;)\u0026#39;\u0026#39;\u0026#39; + \u0026#39;\u0026#39; + +\u0026#39;+ \u0026#39;\u0026#39;\u0026#39;\u0026#39;AS InsQueryVal FROM [dbo].[MyTable1] WHERE Age \u0026gt; @Age\u0026#39; print @ColScriptConstructed\rINSERT INTO @ResultInsertQuery(InsertQuery)\rEXEC sp_executesql @ColScriptConstructed,N\u0026#39;@Age int\u0026#39;, @AgeLimit\rSELECT @InsertStatement + CHAR(13)+CHAR(10) + InsertQuery + \u0026#39;;\u0026#39; + CHAR(13)+CHAR(10) AS [InsertResult] FROM @ResultInsertQuery\rEND\rGO\rNow you can use this stored procedure to get the datatable to insert scripts in each rows. As we've seen earlier, we could call this stored procedure usnig powershell script as like below\n# To connect to SQL Server and execute stored procedure using powershell\u0026#34;\r $databaseServerName = \u0026#34;localhost\u0026#34;\r$databaseName = \u0026#34;databaseName\u0026#34;\r$databaseUsername = \u0026#39;userName\u0026#39;\r$dbUserPassword = \u0026#39;\u0026lt;PasswordHere\u0026gt;\u0026#39;\r$connectionTO = 120\r# you can use different option to do the parameter value processing\r $ageLimit = 31\r# Variable to hold current file directory\r #$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition\r $scriptPath = $PSScriptRoot\r$dateInFormat = (Get-Date).ToString(\u0026#34;yyyyMMdd_HHmmss\u0026#34;)\r$DatabaseConnectionString = \u0026#34;Server=$databaseServerName; Database=$databaseName; User Id=$databaseUsername; Password=$dbUserPassword;Connection Timeout=$connectionTO;\u0026#34;\rtry {\r$SqlConnection = New-Object System.Data.SqlClient.SqlConnection\r$SqlConnection.ConnectionString = $DatabaseConnectionString\r$SqlCommand = New-Object System.Data.SqlClient.SqlCommand\r$SqlCommand.Connection = $SqlConnection\r$SqlCommand.CommandText = \u0026#34;SP_INSERTSCRIPT_FROM_DATATABLE\u0026#34;\r$SqlCommand.CommandType = [System.Data.CommandType]::StoredProcedure\r$SqlCommand.Parameters.AddWithValue(\u0026#34;@AgeLimit\u0026#34;, $ageLimit)\r$DataSet = New-Object System.Data.DataSet\r$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter($SqlCommand)\r$SqlAdapter.Fill($DataSet)\rif ($conn.State -eq [System.Data.ConnectionState]::Open) {\r$SqlConnection.Close()\r}\rif (($null -ne $DataSet) -and ($DataSet.Tables.Count -gt 0)) {\r$resultTable = $DataSet.Tables[0]\rif ($resultTable.Rows.Count -gt 0) {\r$OutPutFilePath = \u0026#34;$scriptPath\\SQLInsertQuery_Result_${dateInFormat}.sql\u0026#34;\rWrite-Host \u0026#34;Result Row Count :\u0026#34; $resultTable.Rows.Count\r\u0026#34;-- Insert script created on ${dateInFormat}\u0026#34; | Out-File $OutPutFilePath -Encoding ascii\rforeach ($row in $resultTable.Rows) {\r$row[\u0026#34;InsertResult\u0026#34;] | Out-File $OutPutFilePath -Append -Encoding ascii\r}\r}\relse {\rWrite-Host \u0026#34;No rows found\u0026#34;\r}\r}\r}\rcatch {\rWrite-Error $_.Exception.Message }\rThe result will be as like below\n-- Insert script created on 20190501_231339\rINSERT INTO [dbo].[MyTable2]([Id],[Name],[Age],[MaritalStatus],[Address],[City]) VALUES (1,\u0026#39;Will Smith\u0026#39;,50,NULL,\u0026#39;Philadelphia, Pennsylvania, USA\u0026#39;,\u0026#39;Philadelphia\u0026#39;);\rINSERT INTO [dbo].[MyTable2]([Id],[Name],[Age],[MaritalStatus],[Address],[City]) VALUES (2,\u0026#39;Leonardo DiCaprio\u0026#39;,44,NULL,\u0026#39;Hollywood, Los Angeles, California, USA\u0026#39;,\u0026#39;Los Angeles\u0026#39;);\rINSERT INTO [dbo].[MyTable2]([Id],[Name],[Age],[MaritalStatus],[Address],[City]) VALUES (3,\u0026#39;Ben Kingsley\u0026#39;,75,NULL,\u0026#39;Scarborough, Yorkshire, England, UK\u0026#39;,\u0026#39;Scarborough\u0026#39;);\rYou can create stored procedure as like below to create multi value insert script.\nSET ANSI_NULLS ON\rGO\rSET QUOTED_IDENTIFIER ON\rGO\r-- =============================================\r-- Author:\tGobikannan Ponmalai\r-- Create date: 01 May 2019\r-- Description:\tTo create insert script from database table\r-- =============================================\rCREATE PROCEDURE [dbo].[SP_MULTI_INSERTSCRIPT_FROM_DATATABLE]\r@AgeLimit int\rAS\rBEGIN\rDECLARE @InsertStatement varchar(max),@INCLUDENULLCOLUMN varchar(100) = \u0026#39;\u0026#39;\u0026#39;NULL\u0026#39;\u0026#39;\u0026#39;+ \u0026#39;+\u0026#39; + \u0026#39;\u0026#39;\u0026#39;,\u0026#39;\u0026#39;\u0026#39; + \u0026#39;+ \u0026#39;, @ColScriptConstructed NVARCHAR(max) = \u0026#39;\u0026#39;\rDECLARE @ResultInsertQuery AS TABLE(InsertQuery NVARCHAR(MAX) NOT NULL)\rIF NOT EXISTS (SELECT * FROM MyTable1)\rBEGIN\rSELECT \u0026#39;-- Info : There is no row found in the Table to convert insert script\u0026#39; AS [InsertResult]\rRETURN\rEND\rSET @InsertStatement = \u0026#39;INSERT INTO [dbo].[MyTable2]([Id],[Name],[Age],[MaritalStatus],[Address],[City]) VALUES \u0026#39;\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Id\u0026#39;, \u0026#39;int\u0026#39;, 0) -- [Id]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Name\u0026#39;, \u0026#39;nvarchar\u0026#39;, 0) -- [Name]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Age\u0026#39;, \u0026#39;int\u0026#39;, 0) -- [Age]\t\tSET @ColScriptConstructed += @INCLUDENULLCOLUMN -- [MaritalStatus]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;Address\u0026#39;, \u0026#39;nvarchar\u0026#39;, 0) -- [Address]\r\tSET @ColScriptConstructed += [dbo].[FN_FORMAT_COLUMN_FOR_INSERT_SCRIPT_STMT] (\u0026#39;City\u0026#39;, \u0026#39;varchar\u0026#39;, 0) -- [City]\r\tSET @ColScriptConstructed = LEFT(@ColScriptConstructed,len(@ColScriptConstructed) - 6)\r-- SELECT @ColScriptConstructed\r\rSET @ColScriptConstructed = \u0026#39;SELECT \u0026#39; + \u0026#39;\u0026#39;\u0026#39;(\u0026#39;\u0026#39;+ \u0026#39; + @ColScriptConstructed + \u0026#39;+\u0026#39;\u0026#39;)\u0026#39;\u0026#39;\u0026#39; + \u0026#39;\u0026#39; + +\u0026#39;+ \u0026#39;\u0026#39;\u0026#39;\u0026#39;AS InsQueryVal FROM [dbo].[MyTable1] WHERE Age \u0026gt; @Age\u0026#39; print @ColScriptConstructed\rINSERT INTO @ResultInsertQuery(InsertQuery)\rEXEC sp_executesql @ColScriptConstructed,N\u0026#39;@Age int\u0026#39;, @AgeLimit\rSELECT @InsertStatement + CHAR(13)+CHAR(10) + STRING_AGG(InsertQuery, \u0026#39;,\u0026#39; + CHAR(13)+CHAR(10)) AS [InsertResult] FROM @ResultInsertQuery\rEND\rGO\rThe result will be as like below\n-- Insert script created on 20190501_232250\rINSERT INTO [dbo].[MyTable2]([Id],[Name],[Age],[MaritalStatus],[Address],[City]) VALUES (1,\u0026#39;Will Smith\u0026#39;,50,NULL,\u0026#39;Philadelphia, Pennsylvania, USA\u0026#39;,\u0026#39;Philadelphia\u0026#39;),\r(2,\u0026#39;Leonardo DiCaprio\u0026#39;,44,NULL,\u0026#39;Hollywood, Los Angeles, California, USA\u0026#39;,\u0026#39;Los Angeles\u0026#39;),\r(3,\u0026#39;Ben Kingsley\u0026#39;,75,NULL,\u0026#39;Scarborough, Yorkshire, England, UK\u0026#39;,\u0026#39;Scarborough\u0026#39;)\r","date":1557441448,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557441448,"objectID":"b7ed053f6f80554a37e81f2d77217289","permalink":"/post/prepare-insert-statement-using-powershell/","publishdate":"2019-05-09T22:37:28Z","relpermalink":"/post/prepare-insert-statement-using-powershell/","section":"post","summary":"To prepare insert script for a datatable from MSSQL Server using stored procedure and write the result into a sql file dynamically using powershell script","tags":["PowerShell","MS SQL"],"title":"Prepare Insert Statement Using Powershell","type":"post"},{"authors":["Gobikannan P"],"categories":["Microsoft SQL"],"content":"Even though the \u0026ldquo;Generate Script\u0026rdquo; feature is available introduced long back ago, some of the developers don't aware of this option to create insert script.\nFor example, the below table is in my database.\nSET ANSI_NULLS ON\rGO\rSET QUOTED_IDENTIFIER ON\rGO\rCREATE TABLE [dbo].[MyTable1](\r[Id] [int] NOT NULL,\r[Name] [nvarchar](255) NOT NULL,\r[Age] [int] NULL,\r[Address] [nvarchar](255) NULL,\r[City] [nvarchar](50) NULL,\rCONSTRAINT [PK_MyTable1] PRIMARY KEY CLUSTERED (\r[Id] ASC\r)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r)\rGO\rI have some data in the table. I want to create an insert script for this table.\nSteps:\nRight click on the database which contains the table.\nGo to \u0026ldquo;Task\u0026rdquo; -\u0026gt; \u0026ldquo;Generate Scripts\u0026hellip;\u0026rdquo; option\nNow you will get \u0026ldquo;Generate \u0026amp; Publish Scripts\u0026rdquo; Dialog\nIn the \u0026ldquo;Introduction\u0026rdquo; section, click \u0026ldquo;Next\u0026rdquo; to skip basic instruction about these options\nIn \u0026ldquo;Choose Objects\u0026rdquo; section, click the radio button on the \u0026ldquo;Select specific database objects\u0026rdquo; option. Now, checkbox prior to each database objects is enabled.\nNow you can choose the table which you want to generate the insert script.\nThen click \u0026ldquo;Next\u0026rdquo; to move to \u0026ldquo;Set Scripting Options\u0026rdquo; section.\nYou can choose your output format in this section.\nThe most important step here to create insert script is, select \u0026ldquo;Advanced\u0026rdquo; section.\nIn the \u0026ldquo;Advanced Scripting Options\u0026rdquo;, change \u0026ldquo;Types of data to script\u0026rdquo; to \u0026ldquo;Data only\u0026rdquo;\nThere are three option is available\n Data only Schema and data Schema only  Go through the remaining option, change if you want any. Click \u0026ldquo;OK\u0026rdquo; to close the dialog.\nClick \u0026ldquo;Next\u0026rdquo; to see the Summary option\nClick \u0026ldquo;Next\u0026rdquo; to see the process of the scripting. After the successful script generation, click \u0026ldquo;Finish\u0026rdquo; to see the output.\nUSE [DBNAMEHERE]\rGO\rINSERT [dbo].[MyTable1] ([Id], [Name], [Age], [Address], [City]) VALUES (1, N\u0026#39;Will Smith\u0026#39;, 50, N\u0026#39;Philadelphia, Pennsylvania, USA\u0026#39;, N\u0026#39;Philadelphia\u0026#39;)\rGO\rINSERT [dbo].[MyTable1] ([Id], [Name], [Age], [Address], [City]) VALUES (2, N\u0026#39;Leonardo DiCaprio\u0026#39;, 44, N\u0026#39;Hollywood, Los Angeles, California, USA\u0026#39;, N\u0026#39;Los Angeles\u0026#39;)\rGO\rINSERT [dbo].[MyTable1] ([Id], [Name], [Age], [Address], [City]) VALUES (3, N\u0026#39;Ben Kingsley\u0026#39;, 75, N\u0026#39;Scarborough, Yorkshire, England, UK\u0026#39;, N\u0026#39;Scarborough\u0026#39;)\rGO\rDDL Statements To generate DDL statements, choose Schema only option in the Types of data to script\u0026rdquo;. And also you can specify SQL Server Version for the script under \u0026ldquo;Script for Server Version\u0026rdquo; to generate backward compatibility scripts\n","date":1557270342,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557270342,"objectID":"eeed7b25412e1de8b5bd87ef2d741405","permalink":"/post/create-insert-script-from-ms-sql-table/","publishdate":"2019-05-07T23:05:42Z","relpermalink":"/post/create-insert-script-from-ms-sql-table/","section":"post","summary":"Simple way to create insert script from table is explained. As many of them already know, using this method you can create DDL script as well.","tags":["MS SQL"],"title":"Create Insert Script From MS Sql Table","type":"post"},{"authors":["Gobikannan P"],"categories":["PowerShell","Microsoft SQL"],"content":"If you are familiar with C# SQL Objects, you can easily implement these object in powershell and you can automate some frequently used process using powershell.\nIn this example we are going to see how we can use sql client objects in the powershell to execute and process the result.\n# How to connect to SQL Server and execute stored procedure using powershell\u0026#34;\r $databaseServerName = \u0026#34;sqlServerName\u0026#34;\r$databaseName = \u0026#34;databaseName\u0026#34;\r$databaseUsername = \u0026#39;userName\u0026#39;\r$dbUserPassword = \u0026#39;\u0026lt;PasswordHere\u0026gt;\u0026#39;\r$connectionTO = 120\r$paramVal = 123\r# you can use different option to do the parameter value processing\r $param1Value = $paramVal\r$DatabaseConnectionString = \u0026#34;Server=$databaseServerName; Database=$databaseName; User Id=$databaseUsername; Password=$dbUserPassword;Connection Timeout=$connectionTO;\u0026#34;\rtry {\r$SqlConnection = New-Object System.Data.SqlClient.SqlConnection\r$SqlConnection.ConnectionString = $DatabaseConnectionString\r$SqlCommand = New-Object System.Data.SqlClient.SqlCommand\r$SqlCommand.Connection = $SqlConnection\r$SqlCommand.CommandText = \u0026#34;STORED_PROCEDURE_NAME\u0026#34;\r$SqlCommand.CommandType = [System.Data.CommandType]::StoredProcedure\r$SqlCommand.Parameters.AddWithValue(\u0026#34;@Parameter1Name\u0026#34;, $param1Value)\r$DataSet = New-Object System.Data.DataSet\r$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter($SqlCommand)\r$SqlAdapter.Fill($DataSet)\rif ($SqlConnection.State -eq [System.Data.ConnectionState]::Open) {\r$SqlConnection.Close()\r}\rif (($null -ne $DataSet) -and ($DataSet.Tables.Count -gt 0)) {\r$resultTable = $DataSet.Tables[0]\rWrite-Host \u0026#34;Result generated :\u0026#34;\r# To Do: Use the first table result ($resultTable) in the result to do your process\r }\r}\rcatch {\rWrite-Error $_.Exception.Message }\r","date":1557186039,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557186039,"objectID":"442f34eed7948f66a17bf3bf47550539","permalink":"/post/execute-storedprocedure-in-powershell/","publishdate":"2019-05-06T23:40:39Z","relpermalink":"/post/execute-storedprocedure-in-powershell/","section":"post","summary":"How we can use sql client objects in the powershell to execute and process the result","tags":["PowerShell","MS SQL"],"title":"Execute Storedprocedure in Powershell","type":"post"},{"authors":null,"categories":null,"content":"","date":1546281000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546281000,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"/about/","publishdate":"2019-01-01T00:00:00+05:30","relpermalink":"/about/","section":"","summary":"About GK Views","tags":null,"title":"About ","type":"widget_page"},{"authors":null,"categories":null,"content":"Last Updated: 01 May 2019\nGK Views is a refernce site. It uses cookies to track site usage using Google Analytics Tracking.\nIf any embeded vidoes are included in my post, it also uses the privacy policy of the hosted site (eg. YouTube).\nAnalytics\r\rGK Views uses Google Analytics to track the site usage. For information on how Google Analytics uses data, please visit “How Google uses information from sites or apps that use google services”\n\rCookie Policy This is the Cookie Policy for GK Views, accessible from gkviews.com\nWhat Are Cookies\nAs is common practice with almost all professional websites this site uses cookies, which are tiny files that are downloaded to your computer, to improve your experience. This page describes what information they gather, how we use it and why we sometimes need to store these cookies. We will also share how you can prevent these cookies from being stored however this may downgrade or \u0026lsquo;break\u0026rsquo; certain elements of the sites functionality.\nFor more general information on cookies see the Wikipedia article on HTTP Cookies.\nHow We Use Cookies\nWe use cookies for a variety of reasons detailed below. Unfortunately in most cases there are no industry standard options for disabling cookies without completely disabling the functionality and features they add to this site. It is recommended that you leave on all cookies if you are not sure whether you need them or not in case they are used to provide a service that you use.\nDisabling Cookies\nYou can prevent the setting of cookies by adjusting the settings on your browser (see your browser Help for how to do this). Be aware that disabling cookies will affect the functionality of this and many other websites that you visit. Disabling cookies will usually result in also disabling certain functionality and features of the this site. Therefore it is recommended that you do not disable cookies.\nThe Cookies We Set\n  Site preferences cookies\nIn order to provide you with a great experience on this site we provide the functionality to set your preferences for how this site runs when you use it. In order to remember your preferences we need to set cookies so that this information can be called whenever you interact with a page is affected by your preferences\n  Third Party Cookies\nIn some special cases we also use cookies provided by trusted third parties. The following section details which third party cookies you might encounter through this site.\n  This site uses Google Analytics which is one of the most widespread and trusted analytics solution on the web for helping us to understand how you use the site and ways that we can improve your experience. These cookies may track things such as how long you spend on the site and the pages that you visit so we can continue to produce engaging content.\nFor more information on Google Analytics cookies, see the official Google Analytics page.\n  More Information\nHopefully that has clarified things for you and as was previously mentioned if there is something that you aren't sure whether you need or not it's usually safer to leave cookies enabled in case it does interact with one of the features you use on our site.\nHowever if you are still looking for more information then you can contact us through one of our preferred contact methods:\n By visiting this link: FB Page  ","date":1530144000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530144000,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"/privacy/","publishdate":"2018-06-28T00:00:00Z","relpermalink":"/privacy/","section":"","summary":"Last Updated: 01 May 2019\nGK Views is a refernce site. It uses cookies to track site usage using Google Analytics Tracking.\nIf any embeded vidoes are included in my post, it also uses the privacy policy of the hosted site (eg. YouTube).\nAnalytics\r\rGK Views uses Google Analytics to track the site usage. For information on how Google Analytics uses data, please visit “How Google uses information from sites or apps that use google services”","tags":null,"title":"Privacy Policy","type":"page"},{"authors":["Gobikannan P"],"categories":["Microsoft .Net"],"content":"In windows application configuration file, connection strings for your database can be stored as key/value pairs in the connectionStrings section of the configuration element.\n\u0026lt;configuration\u0026gt;\r\u0026lt;connectionStrings\u0026gt;\r\u0026lt;add name=\u0026#34;MyDBConnection\u0026#34; connectionString=\u0026#34;Server=xxxx; UID=xxxx; PWD=xxxx; Database=xxxx;\u0026#34; /\u0026gt;\r\u0026lt;/connectionStrings\u0026gt;\r\u0026lt;/configuration\u0026gt;\rTo access your connection string from the configuration file you need to use the following code.\nstring connectionString = ConfigurationManager.ConnectionStrings[\u0026#34;MyDBConnection\u0026#34;].ConnectionString;\rThe ConfigurationManager class in included with in the System.Configuration namespace.\nusing System.Configuration;\rAfter the using statement included, compiler says that\n “The name ‘ConfigurationManager’ does not exist in the current context”.\n To resolve this problem you need to add reference to “C:\\Windows\\Microsoft.NET\\Framework\u0026lt;Version Folder\u0026gt;\\System.configuration.dll” using following steps. (Eg: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Configuration.dll) Goto Project -\u0026gt; Add References…\nSwitch to “Assemblies” tab in ‘Add Reference’ window, and select System.Configuration and click OK to add the reference in your project. (You can search “System.Configuration” to locate the reference)\nNow the connection string from the app.config file will be accessed using the above code.\n","date":1495670400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495670400,"objectID":"814cdf14b158416e2c24e9b78bf98839","permalink":"/post/connection-string-from-app-config-in-windows-application/","publishdate":"2017-05-25T00:00:00Z","relpermalink":"/post/connection-string-from-app-config-in-windows-application/","section":"post","summary":"To solve \"The name ‘ConfigurationManager’ does not exist in the current context\" problem","tags":["C Sharp","MS.Net"],"title":"Connection string from app.config in windows application","type":"post"},{"authors":["Gobikannan P"],"categories":["General"],"content":"There are three ways to change the username in WordPress.\nFirst one is using Add New User in WordPress:-\n Login to your WordPress dashboard. Click on Add New User in User section and provide user details. Make sure that the role should be Administrator then click on Add User.   Log out current user session and Login again using new user credential. Once you logged in successfully, Go to User section. Select the admin user and then click the delete button. It asks about existing posts. Select Attribute all posts and links to option and select your current username in the drop down and then click Confirm Delete.  Now the admin user is deleted from your user section and the existing posts are changed to your current user detail.\nThe Second way is using phpMyAdmin:-\nYou need a credential for your database to do these steps.\nBackup your database before doing the following steps for safety.\n Login to phpMyAdmin to access your database. Under the Structure section, you will find out WP_users table. (the prefix of the table WP_ may vary in your table structure, based on your table prefix configuration ) Click the Browse icon next to that table it will list out the records in the table(the users for your site). Here you can find the username. Click on Edit icon (Like pencil icon) in the corresponding row. Change the value of the user_login field to your new login username and click Go button to save the current changes.  Now you can log in using the new username which you updated in the user table\nThe third way is using the WordPress plugin:-\nThe following plugin will help you to change the user’s login username.\n  Username Changer\n  User ID Changer\n  You need to follow the instructions within the plugin to change username.\nYou may use any one the way to change the default username. But my preference goes to the first way. Because it is secured one and it is provided by WordPress itself.\n","date":1495670400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495670400,"objectID":"426221536c0fc7ea5a5d73fdf4b58129","permalink":"/post/how-to-change-username-in-wordpress/","publishdate":"2017-05-25T00:00:00Z","relpermalink":"/post/how-to-change-username-in-wordpress/","section":"post","summary":"To prevent login attempt using default user name in WordPress, there are three ways to change the username in WordPress.","tags":["Wordpress"],"title":"How to change username in WordPress","type":"post"},{"authors":["Gobikannan P"],"categories":["General"],"content":"The letters A, B, C and D do not appear in the spelling of 1 to 99 (That is ONE, TWO, .. NINETY NINE). The letter D appears the first time in HUNDRED. The letter A appears the first time in THOUSAND. The letter B appears the first time in BILLION. The letter C appears the first time in CORER. Very interesting isn’t it? Share here if you know any interesting facts about numbers.\n","date":1495670400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495670400,"objectID":"c56c56cb6358531e2a75ce67abb6e876","permalink":"/post/interesting-facts-about-numbers/","publishdate":"2017-05-25T00:00:00Z","relpermalink":"/post/interesting-facts-about-numbers/","section":"post","summary":"Magic in English about Numbers","tags":["General"],"title":"Interesting Facts About Numbers","type":"post"},{"authors":["Gobikannan P"],"categories":["Microsoft SQL"],"content":"In MS SQL server there may be a chance to get “The log file for database ‘DatabaseName’ is full.”\nOne of the ways to fix this problem is to back up the database and shrinking database log file to a specific size. You can use Right click on the database and choose Task -\u0026gt; Shrink -\u0026gt; Database in Microsoft SQL Server Management Studio to shrink the database. You can shrink the database file using Task -\u0026gt; Shrink -\u0026gt; File to shrink the Log or Data file. Instead of this, you can use the SQL script to shrink the log file.\nThe syntax to shrink the database log file is as follows.\nUSE DatabaseName;\rGO\r-- Truncate the log by changing the database recovery model to SIMPLE.\rALTER DATABASE DatabaseName\rSET RECOVERY SIMPLE;\rGO\r-- Shrink the truncated log file to (specify size here) 1 MB.\rDBCC SHRINKFILE (DatabaseName_log, 1);\rGO\r-- Reset the database recovery model.\rALTER DATABASE DatabaseName\rSET RECOVERY FULL;\rGO\rIn this syntax, DatabaseName is the name of your database.\nDatabaseName_log is the logical name of your database. (Not physical file name of the database log file)\nYou can get this log file name using the following way.\nOpen the MS SQL Server Management Studio.\nSelect the database property by right click the database in Object Explorer.\nClick the Files page (below to the General).\nNow you can see the logical name for the database in the Database files grid under Logical Name column.\nFor Example\nUSE AdventureWorks;\rGO\rALTER DATABASE AdventureWorks\rSET RECOVERY SIMPLE;\rGO\r-- Shrink the truncated log file to 1 MB.\rDBCC SHRINKFILE (AdventureWorks_Log, 1);\rGO\rALTER DATABASE AdventureWorks\rSET RECOVERY FULL;\rGO\rHere the logical name of the database is “AdventureWorks_Log”.\n","date":1495670400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495670400,"objectID":"889d680d7ffce2342aa1f2ef42af745a","permalink":"/post/shrinking-database-log-file-to-specific-size/","publishdate":"2017-05-25T00:00:00Z","relpermalink":"/post/shrinking-database-log-file-to-specific-size/","section":"post","summary":"To prevent login attempt using default user name in WordPress, there are three ways to change the username in WordPress.","tags":["MS SQL"],"title":"Shrinking database log file to specific size","type":"post"},{"authors":["Gobikannan P"],"categories":["General"],"content":"In windows 7 environment you may receive “Unable to get window handle, Windowless ActiveX controls are not supported..” exception, when you display a child form that contains ActiveX user controls. The user control may be a third party control. To avoid this exception you may disable DEP (Data Execution Prevention) for your ActiveX control.\nDEP (Data Execution Prevention) is a security feature from windows 7 operating system to prevent damage your system from viruses and other security threats. If your user control access memory in an incorrect way, the DEP will close the program.\nIf you trust the user control which you integrated with the application, you may disable the DEP for that program in the following way.\nGo to Control Panel -\u0026gt; System and Security -\u0026gt; System\nYou will get a list of options on the left side of the window.\nClick on the “Advanced system settings” link. You will get the System properties window.\nIn that System properties window, switch to an Advanced tab and click on the settings button under the Performance section, you will get Performance Options window.\nSwitch to Data Execution Prevention tab and select “Turn on DEP for all programs and services except those I select:” option.\nNow the “Add…” button is enabled, then you can add the specific program which you want to disable the DEP.\nThis changes will apply only after you restart the system.\nIf you want to disable the DEP completely, using the command prompt you need to do the following steps.\nSelect Start Menu -\u0026gt; All Programs -\u0026gt; Accessories.\nYou will see the Command Prompt under Accessories. Right click on the Command Prompt and select “Run as administrator”.\nEnter the following command and execute it to disable DEP completely.\nbcdedit.exe /set {current} nx AlwaysOff\rIf you want to enable DEP, you need to execute the following command.\nbcdedit.exe /set {current} nx AlwaysOn\rThese changes will be affected after you restart the computer.\nBy default, DEP is turned on in windows 7.\n","date":1495670400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495670400,"objectID":"bb81e95b6b5f8a54d7d11871c60b4570","permalink":"/post/windowless-activex-controls-are-not-supported/","publishdate":"2017-05-25T00:00:00Z","relpermalink":"/post/windowless-activex-controls-are-not-supported/","section":"post","summary":"In windows 7 environment you may receive “Unable to get window handle, Windowless ActiveX controls are not supported..” exception, when you display a child form that contains ActiveX user controls. The user control may be a third party control. To avoid this exception you may disable DEP (Data Execution Prevention) for your ActiveX control.","tags":["General"],"title":"Windowless ActiveX controls are not supported","type":"post"}]